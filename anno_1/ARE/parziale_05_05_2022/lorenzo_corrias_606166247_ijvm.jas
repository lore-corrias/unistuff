.constant
	OBJREF 0x40
	endline 0x3b
.end-constant

.main
  .var
    x
    y
    z
  .end-var

  LDC_W OBJREF
  INVOKEVIRTUAL input
  ISTORE x

  LDC_W OBJREF
  INVOKEVIRTUAL input
  ISTORE y

  LDC_W OBJREF
  INVOKEVIRTUAL input
  ISTORE z

  LDC_W OBJREF
  LDC_W OBJREF
  ILOAD z
  ILOAD x
  IADD
  INVOKEVIRTUAL fun2
  LDC_W OBJREF
  ILOAD y
  ILOAD z
  IADD
  ILOAD x
  ILOAD z
  INVOKEVIRTUAL fun1
  IADD
  INVOKEVIRTUAL print
  HALT
.end-main

.method fun2(b)
  .var
    i
  .end-var
  
  BIPUSH 0
  ISTORE i
  ciclo-for:
    BIPUSH 4
    ILOAD i
    ISUB
    DUP
    IFEQ fine-for
    IFLT fine-for
    IINC b 1
    IINC i 1
    GOTO ciclo-for
  fine-for:
    LDC_W OBJREF
    ILOAD b
    BIPUSH 2
    INVOKEVIRTUAL mod
    IFEQ if
    IINC b 2
    GOTO fine-metodo
    if:
      IINC b 3
  fine-metodo:
    ILOAD b
    BIPUSH 3
    IADD
    IRETURN
.end-method

.method fun1(a,b,c)
  ciclo-while:
    ILOAD a
    ILOAD b
    ISUB
    DUP
    IFEQ fine-while
    IFLT fine-while
    IINC b 3
    IINC c 1
    GOTO ciclo-while
  fine-while:
    ILOAD c
    ILOAD a
    ISUB
    DUP
    IFEQ else
    IFLT else
    ILOAD b
    ILOAD c
    IADD
    ISTORE b
    GOTO fine-metodo
    else:
      ILOAD b
      ILOAD a
      IADD
      ISTORE b
  fine-metodo:
    ILOAD c
    LDC_W OBJREF
    LDC_W OBJREF
    ILOAD b
    BIPUSH 4
    INVOKEVIRTUAL div
    INVOKEVIRTUAL fun2
    IADD
    ISTORE c
    ILOAD b
    ILOAD c
    IADD
    IRETURN
.end-method

.method mul(i, j)
    ILOAD j
    IFEQ zero
    IINC j  -1
    ILOAD i
    IFEQ zero
    LDC_W OBJREF
    ILOAD i
    ILOAD j
    INVOKEVIRTUAL mul
    ILOAD i
	IADD
	GOTO fine
zero:
	BIPUSH 0x0
fine:     
	IRETURN
.end-method


.method mod (a, b)
	ILOAD a
	IFEQ stop
	ILOAD a
	ILOAD b
	ISUB
	IFLT stop
	LDC_W OBJREF
	ILOAD a
	ILOAD b
	ISUB
	ILOAD b
	INVOKEVIRTUAL mod
	GOTO fine
stop:      
	ILOAD a
fine:
	IRETURN
.end-method

.method div (a, b)    
	ILOAD a    
	ILOAD b        
	ISUB        
	IFLT stop    
	LDC_W OBJREF    
	ILOAD a         
	ILOAD b        
	ISUB        
	ILOAD b        
	INVOKEVIRTUAL div
	BIPUSH 1        
	IADD        
	GOTO fine
stop:        
	BIPUSH 0x0    
fine:        
	IRETURN
.end-method

.method input()
	.var
		num
	.end-var
	
	BIPUSH 0x0
	ISTORE num
	
loop:
	IN
	DUP
	
	LDC_W ENDLINE
	ISUB
	IFEQ stop
	
	BIPUSH 0x30
	ISUB
	
	LDC_W OBJREF
	ILOAD num
	BIPUSH 10
	INVOKEVIRTUAL mul
	
	IADD
	ISTORE num
	GOTO loop
	
stop:
	ILOAD num
	IRETURN
	
.end-method


.method print(x)
	ILOAD x
	IFEQ printz
	
	LDC_W OBJREF
	ILOAD x
	INVOKEVIRTUAL print_digits
	GOTO end
printz:
	BIPUSH 0x30
	OUT
end:

	BIPUSH 0
	IRETURN
.end-method

.method print_digits(x)
	.var
		char
	.end-var

	ILOAD x
	IFEQ end
	
	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL mod
	
	BIPUSH 0x30
	IADD
	ISTORE char
	
	LDC_W OBJREF
	ILOAD x
	BIPUSH 10
	INVOKEVIRTUAL div
	
	LDC_W OBJREF
	SWAP
	INVOKEVIRTUAL print_digits
	
	ILOAD char
	OUT

end:
	BIPUSH 0
	IRETURN
.end-method
